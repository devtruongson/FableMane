<div>
  <div class="container mx-auto px-4 sm:px-6 lg:px-8 mt-10 pb-10">
    <!-- Header -->
    <div class="mb-6 md:mb-8">
      <h1 class="text-2xl md:text-3xl lg:text-4xl font-bold text-gray-900 text-center">Shopping Cart</h1>
      <p class="text-gray-600 text-center mt-2 text-sm md:text-base">
        {{ cart.item_count }}
        {% if cart.item_count == 1 %}item{% else %}items{% endif %} in your cart
      </p>
    </div>

    {% if cart.item_count > 0 %}
      <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 lg:gap-8">
        <!-- Cart Items -->
        <div class="lg:col-span-2 order-2 lg:order-1">
          <div class="bg-white rounded-lg shadow-sm border">
            <div class="p-4 md:p-6">
              <h2 class="text-lg md:text-xl font-semibold mb-4 hidden md:block">Cart Items</h2>

              <form action="/cart" method="post" novalidate class="cart-form">
                <div class="space-y-3 md:space-y-4" id="cart-items">
                  {% for item in cart.items %}
                    <div
                      class="cart-item border border-gray-200 rounded-lg relative overflow-hidden"
                      data-variant-id="{{ item.variant.id }}"
                      data-key="{{ item.key }}"
                    >
                      <!-- Loading overlay -->
                      <div class="item-loading absolute inset-0 bg-white bg-opacity-80 backdrop-blur-sm rounded-lg flex items-center justify-center z-10 hidden">
                        <div class="flex items-center space-x-2">
                          <div
                            class="animate-spin rounded-full h-4 w-4 border-2 border-gray-300 border-t-gray-600"
                          ></div>
                          <span class="text-sm text-gray-600">Updating...</span>
                        </div>
                      </div>

                      <!-- Mobile Layout -->
                      <div class="block md:hidden p-3">
                        <div class="flex gap-3">
                          <!-- Product Image - Mobile -->
                          <div class="flex-shrink-0 w-16 h-16 sm:w-20 sm:h-20">
                            <a href="{{ item.url }}">
                              <img
                                src="{{ item.image | image_url: width: 150 }}"
                                alt="{{ item.title }}"
                                class="w-full h-full object-cover rounded-md"
                              >
                            </a>
                          </div>

                          <!-- Product Info - Mobile -->
                          <div class="flex-1 min-w-0">
                            <div class="flex justify-between items-start gap-2">
                              <div class="flex-1 min-w-0">
                                <h3 class="font-medium text-gray-900 text-sm leading-tight">
                                  <a href="{{ item.url }}" class="hover:text-gray-700 line-clamp-2">
                                    {{- item.product.title -}}
                                  </a>
                                </h3>
                                {% if item.variant.title != 'Default Title' %}
                                  <p class="text-xs text-gray-500 mt-1">{{ item.variant.title }}</p>
                                {% endif %}
                              </div>

                              <!-- Remove Button - Mobile -->
                              <button
                                type="button"
                                class="remove-item text-red-500 hover:text-red-700 p-1 disabled:opacity-50 flex-shrink-0"
                                data-key="{{ item.key }}"
                                title="Remove item"
                              >
                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                </svg>
                              </button>
                            </div>

                            <!-- Price - Mobile -->
                            <div class="mt-2">
                              <p class="font-semibold text-gray-900 text-sm item-price">
                                {{ item.line_price | money }}
                              </p>
                              {% if item.original_line_price != item.line_price %}
                                <p class="text-xs text-gray-500 line-through">{{ item.original_line_price | money }}</p>
                              {% endif %}
                            </div>

                            <!-- Quantity Controls - Mobile -->
                            <div class="mt-3 flex items-center justify-between">
                              <div class="flex items-center border border-gray-300 rounded-md">
                                <button
                                  type="button"
                                  class="quantity-btn px-2 py-1 text-gray-600 hover:text-gray-800 disabled:opacity-50 text-sm"
                                  data-action="decrease"
                                  data-key="{{ item.key }}"
                                >
                                  -
                                </button>
                                <input
                                  type="number"
                                  name="updates[{{ item.key }}]"
                                  value="{{ item.quantity }}"
                                  min="0"
                                  class="quantity-input w-12 text-center py-1 border-0 focus:ring-0 text-sm"
                                  data-key="{{ item.key }}"
                                >
                                <button
                                  type="button"
                                  class="quantity-btn px-2 py-1 text-gray-600 hover:text-gray-800 disabled:opacity-50 text-sm"
                                  data-action="increase"
                                  data-key="{{ item.key }}"
                                >
                                  +
                                </button>
                              </div>
                              <span class="text-xs text-gray-500">Qty: {{ item.quantity }}</span>
                            </div>
                          </div>
                        </div>
                      </div>

                      <!-- Desktop Layout -->
                      <div class="hidden md:flex items-center gap-4 p-4">
                        <!-- Product Image - Desktop -->
                        <div class="flex-shrink-0 w-20 h-20 lg:w-24 lg:h-24">
                          <a href="{{ item.url }}">
                            <img
                              src="{{ item.image | image_url: width: 200 }}"
                              alt="{{ item.title }}"
                              class="w-full h-full object-cover rounded-md"
                            >
                          </a>
                        </div>

                        <!-- Product Info - Desktop -->
                        <div class="flex-grow min-w-0">
                          <h3 class="font-semibold text-gray-900">
                            <a href="{{ item.url }}" class="hover:text-gray-700">{{ item.product.title }}</a>
                          </h3>
                          {% if item.variant.title != 'Default Title' %}
                            <p class="text-sm text-gray-600">{{ item.variant.title }}</p>
                          {% endif %}

                          <!-- Product properties -->
                          {% unless item.properties == empty %}
                            <div class="text-sm text-gray-600 mt-1">
                              {% for property in item.properties %}
                                {% unless property.last == blank %}
                                  <p>{{ property.first }}: {{ property.last }}</p>
                                {% endunless %}
                              {% endfor %}
                            </div>
                          {% endunless %}
                        </div>

                        <!-- Quantity - Desktop -->
                        <div class="flex items-center border border-gray-300 rounded-md">
                          <button
                            type="button"
                            class="quantity-btn px-3 py-2 text-gray-600 hover:text-gray-800 disabled:opacity-50"
                            data-action="decrease"
                            data-key="{{ item.key }}"
                          >
                            -
                          </button>
                          <input
                            type="number"
                            name="updates[{{ item.key }}]"
                            value="{{ item.quantity }}"
                            min="0"
                            class="quantity-input w-16 text-center py-2 border-0 focus:ring-0"
                            data-key="{{ item.key }}"
                          >
                          <button
                            type="button"
                            class="quantity-btn px-3 py-2 text-gray-600 hover:text-gray-800 disabled:opacity-50"
                            data-action="increase"
                            data-key="{{ item.key }}"
                          >
                            +
                          </button>
                        </div>

                        <!-- Price - Desktop -->
                        <div class="text-right w-24 lg:w-28">
                          <p class="font-semibold text-lg item-price">{{ item.line_price | money }}</p>
                          {% if item.original_line_price != item.line_price %}
                            <p class="text-sm text-gray-500 line-through">{{ item.original_line_price | money }}</p>
                          {% endif %}
                        </div>

                        <!-- Remove Button - Desktop -->
                        <button
                          type="button"
                          class="remove-item text-red-500 hover:text-red-700 p-2 disabled:opacity-50"
                          data-key="{{ item.key }}"
                          title="Remove item"
                        >
                          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                          </svg>
                        </button>
                      </div>
                    </div>
                  {% endfor %}
                </div>

                <!-- Cart Actions -->
                <div class="mt-6 flex flex-col gap-3">
                  <a
                    href="/collections/all"
                    class="w-full text-center bg-gray-200 text-gray-800 px-6 py-3 rounded-md hover:bg-gray-300 transition-colors font-medium text-sm md:text-base"
                  >
                    Continue Shopping
                  </a>
                </div>
              </form>
            </div>
          </div>
        </div>

        <!-- Order Summary -->
        <div class="lg:col-span-1 order-1 lg:order-2">
          <div class="bg-white rounded-lg shadow-sm border lg:sticky lg:top-4">
            <div class="p-4 md:p-6">
              <h2 class="text-lg md:text-xl font-semibold mb-4">Order Summary</h2>

              <!-- Loading state -->
              <div class="order-summary-loading hidden">
                <div class="animate-pulse space-y-3">
                  <div class="flex justify-between">
                    <div class="h-4 bg-gray-200 rounded w-24"></div>
                    <div class="h-4 bg-gray-200 rounded w-16"></div>
                  </div>
                  <div class="flex justify-between">
                    <div class="h-4 bg-gray-200 rounded w-20"></div>
                    <div class="h-4 bg-gray-200 rounded w-20"></div>
                  </div>
                </div>
              </div>

              <div class="order-summary-content space-y-3 text-sm">
                <div class="flex justify-between">
                  <span
                    >Subtotal (<span id="item-count">{{ cart.item_count }}</span> items)</span
                  >
                  <span id="cart-total">{{ cart.total_price | money }}</span>
                </div>

                {% if cart.total_discounts > 0 %}
                  <div class="flex justify-between text-green-600">
                    <span>Discounts</span>
                    <span>-{{ cart.total_discounts | money }}</span>
                  </div>
                {% endif %}

                <div class="flex justify-between">
                  <span>Shipping</span>
                  <span class="text-gray-600">Calculated at checkout</span>
                </div>

                <div class="flex justify-between">
                  <span>Tax</span>
                  <span class="text-gray-600">Calculated at checkout</span>
                </div>
              </div>

              <hr class="my-4">

              <div class="flex justify-between text-base md:text-lg font-semibold">
                <span>Total</span>
                <span id="final-total">{{ cart.total_price | money }}</span>
              </div>

              {% if cart.total_discounts > 0 %}
                <p class="text-sm text-green-600 mt-2">You saved {{ cart.total_discounts | money }}!</p>
              {% endif %}

              <!-- Checkout Button -->
              <button
                type="submit"
                name="checkout"
                onclick="window.location.href='/checkout'"
                class="w-full bg-black text-white px-6 py-3 md:py-4 rounded-md hover:bg-gray-800 transition-colors font-medium text-base md:text-lg mt-6"
              >
                Proceed to Checkout
              </button>

              <!-- Discount Code -->
              <div class="mt-6">
                <label class="block text-sm font-medium text-gray-700 mb-2">Discount Code</label>
                <div class="flex gap-2">
                  <input
                    type="text"
                    id="discount-code"
                    placeholder="Enter discount code"
                    class="flex-1 px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm"
                  >
                  <button
                    type="button"
                    id="apply-discount"
                    class="px-3 md:px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 transition-colors text-sm whitespace-nowrap"
                  >
                    Apply
                  </button>
                </div>
              </div>

              <!-- Trust badges -->
              <div class="mt-6 pt-6 border-t">
                <div class="flex items-center justify-center space-x-4 text-xs text-gray-500">
                  <div class="flex items-center">
                    <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd"></path>
                    </svg>
                    Secure checkout
                  </div>
                  <div class="flex items-center">
                    <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                    </svg>
                    Free returns
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

    {% else %}
      <!-- Empty Cart -->
      <div class="text-center py-12 md:py-16">
        <div class="max-w-md mx-auto">
          <svg
            class="mx-auto h-16 w-16 md:h-24 md:w-24 text-gray-300 mb-6"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
          </svg>
          <h2 class="text-xl md:text-2xl font-semibold text-gray-900 mb-4">Your cart is empty</h2>
          <p class="text-gray-600 mb-6 md:mb-8 text-sm md:text-base">
            Looks like you haven't added anything to your cart yet.
          </p>
          <a
            href="/collections/all"
            class="bg-black text-white px-6 md:px-8 py-3 rounded-md hover:bg-gray-800 transition-colors font-medium inline-block text-sm md:text-base"
          >
            Continue Shopping
          </a>
        </div>
      </div>
    {% endif %}
  </div>
</div>

{% schema %}
{
  "name": "Cart",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_discount_code",
      "label": "Show discount code field",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_trust_badges",
      "label": "Show trust badges",
      "default": true
    }
  ]
}
{% endschema %}

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const cartForm = document.querySelector('.cart-form');

    // Quantity buttons
    document.addEventListener('click', function (e) {
      if (e.target.classList.contains('quantity-btn')) {
        const action = e.target.dataset.action;
        const key = e.target.dataset.key;
        const variantId = e.target.closest('.cart-item').dataset.variantId;

        // Lấy tất cả inputs có cùng key (mobile và desktop)
        const inputs = document.querySelectorAll(`input[data-key="${key}"]`);
        const currentValue = parseInt(inputs[0]?.value) || 0;
        let newValue = currentValue;

        if (action === 'increase') {
          newValue = currentValue + 1;
        } else if (action === 'decrease' && currentValue > 1) {
          newValue = currentValue - 1;
        }

        // Cập nhật tất cả inputs (mobile và desktop)
        inputs.forEach((input) => {
          input.value = newValue;
        });

        // Use variant_id instead of key for the API call
        updateCartItem(variantId, newValue);
      }

      // Remove item
      if (e.target.closest('.remove-item')) {
        const key = e.target.closest('.remove-item').dataset.key;
        const variantId = e.target.closest('.cart-item').dataset.variantId;
        removeCartItem(variantId);
      }
    });

    // Quantity input change
    document.addEventListener('change', function (e) {
      if (e.target.classList.contains('quantity-input')) {
        const key = e.target.dataset.key;
        const variantId = e.target.closest('.cart-item').dataset.variantId;
        const quantity = parseInt(e.target.value) || 0;
        updateCartItem(variantId, quantity);
      }
    });

    function updateCartItem(variantId, quantity) {
      showItemLoadingByVariantId(variantId);

      fetch('/cart/change.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          id: variantId,
          quantity: quantity,
        }),
      })
        .then((response) => response.json())
        .then((data) => {
          console.log('Cart updated successfully:', data);
          window.location.reload();
        })
        .catch((error) => {
          console.error('Error updating cart:', error);
          hideItemLoadingByVariantId(variantId);
          alert('Error updating cart. Please try again.');
          revertInputValues(variantId);
        });
    }

    function removeCartItem(variantId) {
      if (confirm('Are you sure you want to remove this item?')) {
        showItemLoadingByVariantId(variantId);

        fetch('/cart/change.js', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            id: variantId,
            quantity: 0,
          }),
        })
          .then((response) => response.json())
          .then((data) => {
            console.log('Item removed successfully:', data);
            window.location.reload();
          })
          .catch((error) => {
            console.error('Error removing item:', error);
            hideItemLoadingByVariantId(variantId);
            alert('Error removing item. Please try again.');
          });
      }
    }

    function showItemLoadingByVariantId(variantId) {
      const cartItem = document.querySelector(`[data-variant-id="${variantId}"]`);
      if (cartItem) {
        const loadingOverlay = cartItem.querySelector('.item-loading');
        const buttons = cartItem.querySelectorAll('button, input');

        loadingOverlay.classList.remove('hidden');
        buttons.forEach((btn) => (btn.disabled = true));
      }
    }

    function hideItemLoadingByVariantId(variantId) {
      const cartItem = document.querySelector(`[data-variant-id="${variantId}"]`);
      if (cartItem) {
        const loadingOverlay = cartItem.querySelector('.item-loading');
        const buttons = cartItem.querySelectorAll('button, input');

        loadingOverlay.classList.add('hidden');
        buttons.forEach((btn) => (btn.disabled = false));
      }
    }

    function revertInputValues(variantId) {
      const cartItem = document.querySelector(`[data-variant-id="${variantId}"]`);
      if (cartItem) {
        const inputs = cartItem.querySelectorAll('.quantity-input');
        inputs.forEach((input) => {
          input.value = input.defaultValue;
        });
      }
    }

    // Discount code functionality
    const applyDiscountBtn = document.getElementById('apply-discount');
    if (applyDiscountBtn) {
      applyDiscountBtn.addEventListener('click', function () {
        const discountCode = document.getElementById('discount-code').value.trim();
        if (discountCode) {
          window.location.href = `/discount/${discountCode}`;
        }
      });
    }
  });
</script>

<style>
  /* Line clamp utility for mobile */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .cart-item {
    transition: all 0.3s ease;
  }

  .cart-item:hover {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
  }

  .quantity-input::-webkit-outer-spin-button,
  .quantity-input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  .quantity-input[type='number'] {
    -moz-appearance: textfield;
  }

  /* Item loading overlay */
  .item-loading {
    transition: all 0.2s ease-in-out;
  }

  /* Disabled state for buttons */
  button:disabled,
  input:disabled {
    cursor: not-allowed;
    opacity: 0.6;
  }

  /* Mobile specific styles */
  @media (max-width: 767px) {
    .cart-item {
      margin-bottom: 0.75rem;
    }

    .quantity-btn {
      min-width: 32px;
      min-height: 32px;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .quantity-input {
      min-width: 48px;
    }

    /* Ensure text doesn't overflow on small screens */
    .min-w-0 {
      min-width: 0;
    }
  }

  /* Touch targets for mobile */
  @media (pointer: coarse) {
    .quantity-btn,
    .remove-item {
      min-height: 44px;
      min-width: 44px;
    }
  }

  /* Sticky summary on mobile landscape */
  @media (max-width: 1023px) and (orientation: landscape) {
    .lg\:sticky {
      position: static;
    }
  }
</style>
