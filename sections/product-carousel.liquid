{% schema %}
{
  "name": "Product Carousel",
  "settings": [
    {
      "type": "text",
      "id": "section_title",
      "label": "Section title",
      "default": "Discover Hair Nirvana"
    }
  ],
  "blocks": [
    {
      "type": "product",
      "name": "Product",
      "settings": [
        {
          "type": "product",
          "id": "product",
          "label": "Select product"
        }
      ]
    }
  ],
  "max_blocks": 10,
  "presets": [
    {
      "name": "Product Carousel",
      "category": "Products",
      "blocks": [{ "type": "product" }, { "type": "product" }, { "type": "product" }]
    }
  ]
}
{% endschema %}

<section class="product-carousel py-10">
  <div class="container mx-auto text-center">
    <!-- Section title with stars -->
    <div class="relative inline-block mb-10">
      <div
        class="absolute inset-0 pointer-events-none stars-field-title"
        style="width: 120%; height: 120%; top: -10%; left: -10%;"
      ></div>
      <h2 class="sm:texy-2xl md:text-3xl lg:text-6xl font-bold relative z-10">
        {{ section.settings.section_title }}
      </h2>
    </div>

    <!-- Slider wrapper -->
    <div class="swiper-container">
      <div class="swiper-wrapper-products-carousel">
        {% for block in section.blocks %}
          {% assign product = all_products[block.settings.product] %}
          {% if product %}
            <div class="swiper-slide px-4">
              {% render 'product-card', product: product %}
            </div>
          {% endif %}
        {% endfor %}
      </div>

      <!-- Navigation buttons -->
      <div class="swiper-button-next"></div>
      <div class="swiper-button-prev"></div>
    </div>
  </div>
</section>

<style>
  .star-title {
    position: absolute;
    transition: all 0.3s ease;
  }

  .star-title-float {
    animation: starTitleFloat 8s ease-in-out infinite;
  }

  .star-title-twinkle {
    animation: starTitleTwinkle 4s ease-in-out infinite;
  }

  .star-title-pulse {
    animation: starTitlePulse 6s ease-in-out infinite;
  }

  @keyframes starTitleFloat {
    0%,
    100% {
      transform: translateY(0px) rotate(0deg);
      opacity: 0.4;
    }
    50% {
      transform: translateY(-8px) rotate(90deg);
      opacity: 0.8;
    }
  }

  @keyframes starTitleTwinkle {
    0%,
    100% {
      opacity: 0.3;
      transform: scale(0.8);
    }
    50% {
      opacity: 1;
      transform: scale(1.3);
    }
  }

  @keyframes starTitlePulse {
    0%,
    100% {
      opacity: 0.5;
      transform: scale(1);
    }
    50% {
      opacity: 0.9;
      transform: scale(1.1);
    }
  }
</style>

<script>
  $(document).ready(function () {
    $('.swiper-wrapper-products-carousel').slick({
      slidesToShow: 4,
      slidesToScroll: 1,
      dots: false,
      infinite: true,
      arrows: true,
      autoplay: true,
      autoplaySpeed: 5000,
      arrows: true,
      prevArrow: `<button type="button" class="bg-[#fff] w-[40px] h-[40px] rounded-[50%] flex justify-center items-center slick-prev cursor-pointer absolute left-[-40px] hover:shadow-md  top-1/2 transform -translate-y-1/2 z-10">
               <svg width="30" height="30" viewBox="0 0 24 24">
                 <path d="M15 18l-6-6 6-6" stroke="currentColor" stroke-width="2" fill="none"/>
               </svg>
            </button>`,
      nextArrow: `<button type="button" class="bg-[#fff] w-[40px] h-[40px] rounded-[50%] flex justify-center items-center slick-next cursor-pointer absolute right-[-40px]  hover:shadow-md top-1/2 transform -translate-y-1/2 z-10">
               <svg width="30" height="30" viewBox="0 0 24 24">
                 <path d="M9 6l6 6-6 6" stroke="currentColor" stroke-width="2" fill="none"/>
               </svg>
            </button>`,
    });

    // Star SVG for title
    const starSVG = `
      <svg viewBox="0 0 21 28" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M20.1001 12.9001H15.6001C15.5001 12.9001 15.5001 12.9001 15.4001 12.9001H12.9001C12.8001 12.9001 12.7001 12.8001 12.6001 12.8001C11.7001 12.4001 11.4001 11.4001 11.1001 10.5001C10.9001 9.8001 10.7001 9.2001 10.6001 8.5001V0.200098C10.6001 -0.0999023 10.2001 -0.0999023 10.2001 0.200098V10.0001C10.1001 10.6001 10.0001 11.2001 9.6001 11.7001C9.5001 11.8001 9.4001 12.0001 9.3001 12.1001C8.6001 12.7001 7.5001 12.8001 6.6001 12.8001H6.5001H0.200098C-0.0999023 12.8001 -0.0999023 13.2001 0.200098 13.2001H7.3001H7.4001C9.3001 14.4001 10.0001 16.7001 10.2001 18.9001V26.9001C10.2001 27.2001 10.6001 27.2001 10.6001 26.9001V18.7001C11.0001 17.1001 11.5001 15.5001 12.6001 14.3001L12.7001 14.2001C13.2001 13.8001 13.8001 13.5001 14.5001 13.3001H20.2001C20.4001 13.3001 20.4001 12.9001 20.1001 12.9001Z" fill="black"></path>
      </svg>
    `;

    // Function to create stars around title
    function createTitleStars() {
      $('.stars-field-title').each(function () {
        const container = $(this)[0];
        container.innerHTML = '';

        // Create 8-12 stars around title
        const numberOfStars = Math.floor(Math.random() * 2) + 3;

        for (let i = 0; i < numberOfStars; i++) {
          const star = document.createElement('div');
          star.className = 'star-title';

          // Random size (smaller for title)
          const size = Math.random() * 12 + 6; // 6px to 18px
          star.style.width = size + 'px';
          star.style.height = size * 1.33 + 'px';

          // Random position around the title area
          let left, top;
          do {
            left = Math.random() * 100;
            top = Math.random() * 100;
          } while (left > 15 && left < 85 && top > 15 && top < 85); // Avoid center text area

          star.style.left = left + '%';
          star.style.top = top + '%';

          // Random opacity
          star.style.opacity = Math.random() * 0.5 + 0.3;

          // Random animation
          const animations = ['star-title-float', 'star-title-twinkle', 'star-title-pulse'];
          star.classList.add(animations[Math.floor(Math.random() * animations.length)]);

          // Random delay
          star.style.animationDelay = Math.random() * 3 + 's';

          star.innerHTML = starSVG;
          container.appendChild(star);
        }
      });
    }

    // Create initial title stars
    createTitleStars();

    // Recreate stars every 6 seconds
    setInterval(createTitleStars, 6000);

    // More stars on title hover
    $('.stars-field-title')
      .parent()
      .hover(
        function () {
          const container = $(this).find('.stars-field-title')[0];
          // Add 5 more stars temporarily
          for (let i = 0; i < 5; i++) {
            const star = document.createElement('div');
            star.className = 'star-title star-title-twinkle';
            star.style.width = Math.random() * 8 + 4 + 'px';
            star.style.height = Math.random() * 10 + 6 + 'px';
            star.style.left = Math.random() * 100 + '%';
            star.style.top = Math.random() * 100 + '%';
            star.style.opacity = Math.random() * 0.4 + 0.2;
            star.style.animationDelay = Math.random() * 1 + 's';
            star.innerHTML = starSVG;
            container.appendChild(star);
          }
        },
        function () {
          // Return to normal after 1 second
          setTimeout(createTitleStars, 1000);
        }
      );
  });
</script>
