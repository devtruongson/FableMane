<style>
  .product-media-container {
    display: flex;
    gap: 16px;
    max-width: 100%;
  }

  .product-thumbnails {
    display: flex;
    flex-direction: column;
    gap: 8px;
    width: 80px;
    flex-shrink: 0;
  }

  .thumbnail-item {
    width: 80px;
    height: 80px;
    border-radius: 8px;
    overflow: hidden;
    cursor: pointer;
    border: 2px solid transparent;
    transition: all 0.3s ease;
    position: relative;
  }

  .thumbnail-item.active {
    border-color: #000;
  }

  .thumbnail-item:hover {
    border-color: #666;
  }

  .thumbnail-item img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
  }

  .product-main-media {
    flex: 1;
    position: relative;
    background: #f8f8f8;
    border-radius: 12px;
    overflow: hidden;
    aspect-ratio: 1;
    max-height: 600px;
  }

  .main-media-item {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .main-media-item.active {
    opacity: 1;
  }

  .main-media-item img,
  .main-media-item video {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
  }

  .main-media-item video {
    background: #000;
  }

  .main-media-item video::-webkit-media-controls-panel {
    background-color: rgba(0, 0, 0, 0.8);
  }

  .main-media-item video::-webkit-media-controls-fullscreen-button {
    display: block;
  }

  .navigation-arrows {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(255, 255, 255, 0.9);
    border: none;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 16px;
    transition: all 0.3s ease;
    z-index: 10;
  }

  .nav-prev {
    left: 16px;
  }

  .nav-next {
    right: 16px;
  }

  .navigation-arrows:hover {
    background: rgba(255, 255, 255, 1);
    transform: translateY(-50%) scale(1.1);
  }

  @media (max-width: 768px) {
    .product-media-container {
      flex-direction: column-reverse;
    }

    .product-thumbnails {
      flex-direction: row;
      width: 100%;
      justify-content: center;
      gap: 8px;
      padding: 16px 0;
      overflow-x: auto;
    }

    .thumbnail-item {
      width: 60px;
      height: 60px;
      flex-shrink: 0;
    }

    .product-main-media {
      aspect-ratio: 1;
      max-height: 400px;
    }
  }
</style>

<section class="product-main py-8">
  <div class="container mx-auto px-4">
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
      <!-- Product Media Gallery -->
      <div class="product-media">
        <div class="product-media-container">
          <!-- Thumbnails -->
          <div class="product-thumbnails">
            {% for media in product.media limit: 8 %}
              <div
                class="thumbnail-item {% if forloop.first %}active{% endif %}"
                data-media-index="{{ forloop.index0 }}"
                onclick="showMedia({{ forloop.index0 }})"
              >
                {% case media.media_type %}
                  {% when 'image' %}
                    <img
                      src="{{ media | image_url: width: 160 }}"
                      alt="{{ media.alt | escape }}"
                      width="80"
                      height="80"
                      loading="lazy"
                    >
                  {% when 'video' %}
                    <img
                      src="{{ media.preview_image | image_url: width: 160 }}"
                      alt="{{ media.alt | escape }}"
                      width="80"
                      height="80"
                      loading="lazy"
                    >
                  {% else %}
                    <img
                      src="{{ media.preview_image | image_url: width: 160 }}"
                      alt="{{ media.alt | escape }}"
                      width="80"
                      height="80"
                      loading="lazy"
                    >
                {% endcase %}
              </div>
            {% endfor %}
          </div>

          <!-- Main Media Display -->
          <div class="product-main-media">
            <!-- Navigation Arrows -->
            {% if product.media.size > 1 %}
              <button class="navigation-arrows nav-prev" onclick="previousMedia()">
                <i class="fas fa-chevron-left"></i>
              </button>
              <button class="navigation-arrows nav-next" onclick="nextMedia()">
                <i class="fas fa-chevron-right"></i>
              </button>
            {% endif %}

            {% for media in product.media %}
              <div
                class="main-media-item {% if forloop.first %}active{% endif %}"
                data-media-index="{{ forloop.index0 }}"
              >
                {% case media.media_type %}
                  {% when 'image' %}
                    <img
                      src="{{ media | image_url: width: 800 }}"
                      alt="{{ media.alt | escape }}"
                      width="800"
                      height="800"
                      loading="{% if forloop.first %}eager{% else %}lazy{% endif %}"
                    >
                  {% when 'video' %}
                    <video
                      preload="metadata"
                      muted
                      playsinline
                      autoplay
                      loop
                      controls
                      controlslist="nodownload"
                      data-media-id="{{ media.id }}"
                      poster="{{ media.preview_image | image_url: width: 800 }}"
                    >
                      {% for source in media.sources %}
                        <source src="{{ source.url }}" type="{{ source.mime_type }}">
                      {% endfor %}
                    </video>
                  {% when 'external_video' %}
                    <div class="external-video">
                      {{ media | external_video_tag }}
                    </div>
                  {% when 'model' %}
                    <div class="model-viewer">
                      {{ media | model_viewer_tag }}
                    </div>
                {% endcase %}
              </div>
            {% endfor %}
          </div>
        </div>
      </div>

      <!-- Product Info -->
      <div class="product-info">
        <h1 class="text-3xl font-bold mb-4">{{ product.title }}</h1>
        <div class="product-price mb-6">
          <span class="text-2xl font-semibold">{{ product.price | money }}</span>
          {% if product.compare_at_price > product.price %}
            <span class="text-lg text-gray-500 line-through ml-2">{{ product.compare_at_price | money }}</span>
          {% endif %}
        </div>

        <div class="product-description mb-6">
          {{ product.description }}
        </div>

        <form action="{{ routes.cart_add_url }}" method="post" enctype="multipart/form-data" class="product-form">
          {% unless product.has_only_default_variant %}
            <div class="product-variants mb-4">
              {% for option in product.options_with_values %}
                <div class="variant-option mb-4">
                  <label class="block text-sm font-medium mb-2">{{ option.name }}</label>
                  <select name="option{{ forloop.index }}" class="w-full p-3 border border-gray-300 rounded-lg">
                    {% for value in option.values %}
                      <option value="{{ value | escape }}">{{ value }}</option>
                    {% endfor %}
                  </select>
                </div>
              {% endfor %}
            </div>
          {% endunless %}

          <div class="quantity-selector mb-6">
            <label class="block text-sm font-medium mb-2">Quantity</label>
            <div class="flex items-center">
              <button type="button" class="quantity-btn minus bg-gray-200 hover:bg-gray-300 w-10 h-10 rounded-l-lg">
                -
              </button>
              <input
                type="number"
                name="quantity"
                value="1"
                min="1"
                class="quantity-input w-20 h-10 text-center border-t border-b border-gray-300"
              >
              <button type="button" class="quantity-btn plus bg-gray-200 hover:bg-gray-300 w-10 h-10 rounded-r-lg">
                +
              </button>
            </div>
          </div>

          <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
          <button
            type="submit"
            class="add-to-cart-btn w-full bg-black text-white py-3 px-6 rounded-lg hover:bg-gray-800 transition-colors font-medium"
          >
            Add to Cart
          </button>
        </form>
      </div>
    </div>
  </div>
</section>

<script>
let currentMediaIndex = 0;
const totalMedia = {{ product.media.size }};

$(document).ready(function() {
  // Quantity controls
  $('.quantity-btn').on('click', function() {
    const $input = $(this).siblings('.quantity-input');
    let currentVal = parseInt($input.val()) || 1;
    
    if ($(this).hasClass('minus') && currentVal > 1) {
      $input.val(currentVal - 1);
    } else if ($(this).hasClass('plus')) {
      $input.val(currentVal + 1);
    }
  });
  
  // Variant selection
  $('.product-variants select').on('change', function() {
    updateVariant();
  });
  
  // Video event handlers
  $('video').each(function() {
    const video = this;
    
    // Auto-play first video if it's the active one
    if ($(this).closest('.main-media-item').hasClass('active')) {
      setTimeout(() => {
        video.play().catch(e => {
          console.log('Auto-play prevented:', e);
        });
      }, 500);
    }
    
    // Handle video errors
    $(this).on('error', function() {
      console.log('Video load error:', this.error);
    });
    
    // Handle video loaded
    $(this).on('loadeddata', function() {
      console.log('Video loaded successfully');
    });
  });
});

function showMedia(index) {
  currentMediaIndex = index;
  
  // Hide all media items
  $('.main-media-item').removeClass('active');
  $('.thumbnail-item').removeClass('active');
  
  // Show selected media
  $(`.main-media-item[data-media-index="${index}"]`).addClass('active');
  $(`.thumbnail-item[data-media-index="${index}"]`).addClass('active');
  
  // Pause all videos when switching
  $('video').each(function() {
    this.pause();
    this.currentTime = 0;
  });
  
  // Auto-play the current video if it exists
  const currentVideo = $(`.main-media-item[data-media-index="${index}"] video`)[0];
  if (currentVideo) {
    setTimeout(() => {
      currentVideo.play().catch(e => {
        console.log('Auto-play prevented:', e);
      });
    }, 100);
  }
}

function nextMedia() {
  currentMediaIndex = (currentMediaIndex + 1) % totalMedia;
  showMedia(currentMediaIndex);
}

function previousMedia() {
  currentMediaIndex = (currentMediaIndex - 1 + totalMedia) % totalMedia;
  showMedia(currentMediaIndex);
}

function updateVariant() {
  const options = [];
  $('.product-variants select').each(function() {
    options.push($(this).val());
  });
  
  // Find matching variant
  const variants = {{ product.variants | json }};
  const matchingVariant = variants.find(variant => {
    return variant.options.every((option, index) => option === options[index]);
  });
  
  if (matchingVariant) {
    // Update hidden input
    $('input[name="id"]').val(matchingVariant.id);
    
    // Update price
    $('.product-price span:first-child').text(formatMoney(matchingVariant.price));
    
    // Update compare at price
    if (matchingVariant.compare_at_price && matchingVariant.compare_at_price > matchingVariant.price) {
      let $comparePrice = $('.product-price .line-through');
      if ($comparePrice.length) {
        $comparePrice.text(formatMoney(matchingVariant.compare_at_price));
      } else {
        $('.product-price').append(`<span class="text-lg text-gray-500 line-through ml-2">${formatMoney(matchingVariant.compare_at_price)}</span>`);
      }
    } else {
      $('.product-price .line-through').remove();
    }
    
    // Update availability
    if (matchingVariant.available) {
      $('.add-to-cart-btn').prop('disabled', false).text('Add to Cart');
    } else {
      $('.add-to-cart-btn').prop('disabled', true).text('Sold Out');
    }
  }
}

function formatMoney(cents) {
  return Shopify.formatMoney ? Shopify.formatMoney(cents) : '$' + (cents / 100).toFixed(2);
}

// Keyboard navigation
$(document).keydown(function(e) {
  if (e.keyCode === 37) { // Left arrow
    previousMedia();
  } else if (e.keyCode === 39) { // Right arrow
    nextMedia();
  }
});
</script>

{% schema %}
{
  "name": "Product Main",
  "tag": "section",
  "class": "product-main-section",
  "settings": [
    {
      "type": "header",
      "content": "Product Display Settings"
    },
    {
      "type": "checkbox",
      "id": "enable_zoom",
      "label": "Enable image zoom on hover",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_video_autoplay",
      "label": "Auto-play videos when selected",
      "default": false
    },
    {
      "type": "select",
      "id": "thumbnail_position",
      "label": "Thumbnail position",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "bottom",
          "label": "Bottom"
        }
      ],
      "default": "left"
    }
  ],
  "presets": [
    {
      "name": "Product Main"
    }
  ]
}
{% endschema %}
